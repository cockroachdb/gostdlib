#!/usr/bin/env bash

set -euo pipefail

if [[ $# -ne 0 ]]; then
  echo "usage: $0" >&2
  exit 1
fi

go_version=go1.14
xtools_version=86caa796c7ab0e32b908c5ebd5748faedd06c1da

repos=/tmp/gostdlib/repos

if [[ ! -d "$repos/go" ]]; then
  git clone https://github.com/golang/go.git "$repos/go"
fi
(cd "$repos/go" && git fetch && git checkout --force "$go_version")

if [[ ! -d "$repos/golang.org/x/tools" ]]; then
  git clone https://github.com/golang/tools.git "$repos/golang.org/x/tools"
fi
(cd "$repos/golang.org/x/tools" && git fetch && git checkout --force "$xtools_version")

packages=(
  cmd/gofmt
  cmd/internal/diff
  go/format
  go/printer
  golang.org/x/tools/cmd/goimports
  golang.org/x/tools/go/ast/astutil
  golang.org/x/tools/go/internal/packagesdriver
  golang.org/x/tools/go/packages
  golang.org/x/tools/go/types/typeutil
  golang.org/x/tools/imports
  golang.org/x/tools/internal/fastwalk
  golang.org/x/tools/internal/gopathwalk
  golang.org/x/tools/internal/imports
  golang.org/x/tools/internal/module
  golang.org/x/tools/internal/semver
  golang.org/x/tools/internal/span
  golang.org/x/tools/internal/testenv
  golang.org/x/tools/internal/tool
  golang.org/x/tools/internal/txtar
)

is_stdlib() {
  [[ $1 != *.* ]]
}

trim_domain() {
  if is_stdlib "$1"; then
    echo "$1"
  else
    echo "${1#*/}"
  fi
}

find . -type d -maxdepth 1 -not \( -name bin -o -name patches -o -name '.*' \) -exec rm -rf {} +

for p in "${packages[@]}"; do
  tp=$(trim_domain "$p")
  mkdir -p "$tp"
  if is_stdlib "$p"; then
    cp -R "$repos/go/src/$p/" "$tp"
  else
    cp -R "$repos/$p/" "$tp"
  fi
done

for p in "${packages[@]}"; do
  echo ">> rewriting $p"
  find . -name '*.go' | xargs sed -i.bak -e "s,$p,github.com/cockroachdb/gostdlib/$(trim_domain $p),"
done
find . -name '*.bak' -delete

for p in patches/*; do
  echo ">> applying $p"
  patch -p2 < "$p"
done
find . -name '*.orig' -delete

while read -r f; do
  echo ">> removing import comment from $f"
  sed -E 's,// import .*,,' "$f" > "$f.tmp"
  mv "$f.tmp" "$f"
done < <(grep -lER 'package \S+ // import' -- * | grep '\.go$')

go build -o bin/gofmt ./cmd/gofmt
bin/gofmt -w .
